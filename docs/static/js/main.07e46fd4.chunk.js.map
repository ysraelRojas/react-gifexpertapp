{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFechGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OAEI,sBAAMC,SAfW,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAQlB,SACI,uBAAOO,KAAK,OAAOC,MAAQT,EAAaU,SAtBvB,SAACP,GAEtBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,qBAAKc,UAAU,2CAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,UAAf,SACI,qBAAKC,IAAMf,EAAMgB,IAAMN,MAE3B,qBAAKI,UAAU,UAAf,SACI,oBAAIA,UAAU,SAAd,SAA0BJ,YCRjCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHuB,SAAEA,GAEzB,MAA0Bd,mBAAS,CAAEqB,KAAM,GAAIa,SAAS,IAAxD,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OAXAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHC,YAAW,WACPJ,EAAS,CAAEf,KAAMkB,EAAML,SAAS,MACjC,UAGZ,CAAEpB,IAEEqB,EDZwBM,CAAa3B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,eAAC,WAAD,WACI,6BAAMpB,IAEJoB,GAAW,4CAEb,qBAAKJ,UAAU,uBAAf,SAEQH,EAAOJ,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAAiCA,GAAdA,EAAIC,aEbzCiB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CAAwBA,SAAWA,GAArBA,Y,MCd7C8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.07e46fd4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const inputValueChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2) {\r\n\r\n            setCategories( cats => [ inputValue, ...cats    ]);\r\n            setInputValue('');\r\n\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit }>\r\n            <input type=\"text\" value={ inputValue } onChange={ inputValueChange } />\r\n        </form>            \r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Dcq0bkOHer9VgrDYMujeAw1C0GkUhVbI`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n\r\n};\r\n","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"column animate__animated animate__bounce\">\r\n            <div className=\"ui fluid card\">\r\n                <div className=\" image \">\r\n                    <img src={ url } alt={ title }  />\r\n                </div>\r\n                <div className=\"content\">\r\n                    <h3 className=\"header\" >{ title }</h3>\r\n                </div>\r\n            </div> \r\n        </div>           \r\n    )\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { useFechGifs } from '../hooks/useFechGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFechGifs( category );\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Cargando...</p> }\r\n\r\n            <div className=\"ui three column grid\">\r\n                {\r\n                    images.map( img => {\r\n                        return <GifGridItem key={ img.id } { ...img }/>;\r\n                    })\r\n                }\r\n            </div>                \r\n        </Fragment>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFechGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({ data: [], loading: true });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout(() => {\r\n                    setState({ data: imgs, loading: false });\r\n                }, 3000);\r\n\r\n            });\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n};","import React, {useState, Fragment} from 'react';\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( cats => [...cats, 'HunterXHunter'] );\r\n    // };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        return <GifGrid key={category} category={ category } />\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}